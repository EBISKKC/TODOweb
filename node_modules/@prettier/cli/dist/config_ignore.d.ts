import type { Ignore } from "./types.js";
declare const getIgnoresContent: import("lomemo/dist/types.js").FN<[folderPath: string, filesNames: string[]], Promise<string[] | undefined>> & {
    cache: Map<unknown, unknown>;
};
declare const getIgnoresContentMap: (foldersPaths: string[], filesNames: string[]) => Promise<Partial<Record<string, string[]>>>;
declare const getIgnoreBy: (folderPath: string, filesContents: string[]) => Ignore;
declare const getIgnoreBys: (foldersPaths: string[], filesContents: string[][]) => Ignore | undefined;
declare const getIgnores: import("lomemo/dist/types.js").FN<[folderPath: string, filesNames: string[]], Promise<Ignore | undefined>> & {
    cache: Map<unknown, unknown>;
};
declare const getIgnoresUp: import("lomemo/dist/types.js").FN<[folderPath: string, filesNames: string[]], Promise<Ignore | undefined>> & {
    cache: Map<unknown, unknown>;
};
declare const getIgnoreResolved: (filePath: string, filesNames: string[]) => Promise<boolean>;
export { getIgnoresContent, getIgnoresContentMap, getIgnoreBy, getIgnoreBys, getIgnores, getIgnoresUp, getIgnoreResolved };
