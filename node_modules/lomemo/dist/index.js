/* IMPORT */
/* MAIN */
const memoize = (fn, resolver) => {
    const memoized = function (...args) {
        const key = resolver ? resolver.apply(this, args) : args[0];
        const cache = memoized.cache;
        const cached = cache.get(key);
        if (cached !== undefined || cache.has(key))
            return cached;
        const result = fn.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
    };
    memoized.cache = new (memoize.Cache || Map)();
    return memoized;
};
/* UTILITIES */
memoize.Cache = Map;
/* EXPORT */
export default memoize;
